[gd_scene load_steps=44 format=3 uid="uid://chadcflauv6ap"]

[ext_resource type="Texture2D" uid="uid://idelqjnu7633" path="res://assets/characters/Mario.png" id="1_27e4p"]
[ext_resource type="Script" path="res://states/state_machine.gd" id="2_h01ru"]
[ext_resource type="Script" path="res://states/player/climb_state.gd" id="3_8qeu3"]
[ext_resource type="Script" path="res://states/player/idle_state.gd" id="3_ygm7w"]
[ext_resource type="Script" path="res://states/player/jump_state.gd" id="4_e73df"]
[ext_resource type="Script" path="res://states/player/run_state.gd" id="4_hvfdt"]

[sub_resource type="GDScript" id="GDScript_sy84s"]
script/source = "extends CharacterBody2D

const SPEED = 150.0
const JUMP_VELOCITY = -290.0

enum State { AIR, FLOOR, LADDER }
var state = State.AIR

var skid_landing = false

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")

func _physics_process(delta):
	match state:
		State.AIR:
			air_physics(delta)
		State.FLOOR:
			floor_physics(delta)
		State.LADDER:
			ladder_physics(delta)

	move_and_slide()

func air_physics(delta):
	$LandingTimer.stop()
	
	$AnimationPlayer.play(\"jump\")
	
	# Only update the y velocity during a jump - no direction changes
	velocity.y += gravity * delta
	
	# Return to the floor after a jump
	if is_on_floor():
		if velocity.x != 0:
			skid_landing = true
			$AnimationPlayer.play(\"jump_end\")
			$LandingTimer.start()
		else:
			$AnimationPlayer.play(\"running\")
		
		state = State.FLOOR
		return
	
func floor_physics(delta):
	# Move to AIR when pressing the jump key
	if Input.is_action_just_pressed(\"ui_accept\"):
		velocity.y = JUMP_VELOCITY
		state = State.AIR
		return

	# Get inputs
	var x_axis = Input.get_axis(\"ui_left\", \"ui_right\")
	var y_axis = Input.get_axis(\"ui_up\", \"ui_down\")

	# Do checks for switching to LADDER state
	if y_axis == -1 and not x_axis and $LadderBottomChecker.is_colliding():
		switch_to_ladder_state($LadderBottomChecker)
		return
	
	if y_axis == 1 and not x_axis and $LadderTopChecker.is_colliding():
		switch_to_ladder_state($LadderTopChecker)
		return
	
	# Ensure Mario is facing the correct direction
	if x_axis == 1:
		$Sprite2D.flip_h = true
	elif x_axis == -1:
		$Sprite2D.flip_h = false
	
	if not skid_landing:
		$AnimationPlayer.play(\"running\")
		
		if not x_axis:
			$AnimationPlayer.stop()
		
	velocity.x = x_axis * SPEED
	velocity.y += gravity * delta

func ladder_physics(_delta):
	var at_end_of_ladder = (
		$PlatformBelowChecker.is_colliding() and
		($LadderBottomChecker.is_colliding() or $LadderTopChecker.is_colliding())
	)
	
	# Get the state of the up and down keys
	var y_axis = Input.get_axis(\"ui_up\", \"ui_down\")
	if ((y_axis == -1 and not $LadderTopChecker.is_colliding()) or
		(y_axis == 1 and not $LadderBottomChecker.is_colliding())
	):
		velocity.y = y_axis * SPEED
		$AnimationPlayer.play(\"climbing\")
	else:
		velocity.y = 0
		
		if at_end_of_ladder:
			$AnimationPlayer.play(\"ladder_end\")
		else:
			$AnimationPlayer.pause()
	
	# Transition to AIR from end of ladder
	if Input.is_action_just_pressed(\"ui_accept\") and at_end_of_ladder:
		self.set_collision_mask_value(2, true)
		velocity.y = JUMP_VELOCITY
		state = State.AIR
		return
		
	# Do checks for switching to FLOOR state 
	var x_axis = Input.get_axis(\"ui_left\", \"ui_right\")
	if x_axis and at_end_of_ladder:
		# Restart checking for platform collisions while on the floor
		self.set_collision_mask_value(2, true)
		state = State.FLOOR
		return

func switch_to_ladder_state(checker):
	# Stop checking for platform collisions while on ladders
	self.set_collision_mask_value(2, false)
	
	# Prevent sideways movement and snap to the centre of the ladder
	velocity.x = 0
	move_to_centre_of_ladder(checker)

	state = State.LADDER

# Moves Mario to line up with the ladder perfectly before ascent or descent
func move_to_centre_of_ladder(checker: RayCast2D):
	var tile_map : TileMap = checker.get_collider()
	var rid = checker.get_collider_rid()
	var tile_coord = tile_map.get_coords_for_body_rid(rid)
	position.x = (tile_coord.x + 0.5) * tile_map.tile_set.tile_size.x + tile_map.position.x


func _on_landing_timer_timeout():
	skid_landing = false
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_xsfub"]
radius = 15.0
height = 48.0

[sub_resource type="Animation" id="Animation_jltwj"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:flip_h")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath(".:flip_v")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="Animation" id="Animation_bmmu7"]
resource_name = "climbing"
length = 0.3
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [3]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:flip_h")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.15),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}

[sub_resource type="Animation" id="Animation_bl034"]
resource_name = "death"
length = 1.5
step = 0.15
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.15, 0.3, 0.45, 0.6, 0.75, 0.9, 1.05, 1.2, 1.35),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [15, 16, 15, 16, 15, 16, 15, 16, 15, 17]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:flip_h")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.3, 0.6, 0.9, 1.2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 1,
"values": [false, true, false, true, false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath(".:flip_v")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.3, 0.6, 0.9, 1.2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 1,
"values": [false, true, false, true, false]
}

[sub_resource type="Animation" id="Animation_fd5f4"]
resource_name = "jump"
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [13]
}

[sub_resource type="Animation" id="Animation_24x35"]
resource_name = "jump_end"
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [14]
}

[sub_resource type="Animation" id="Animation_kcmuu"]
resource_name = "ladder_end"
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [6]
}

[sub_resource type="Animation" id="Animation_phuvu"]
resource_name = "running"
length = 0.18
loop_mode = 1
step = 0.06
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.06, 0.12),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [0, 1, 2]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_met8n"]
_data = {
"RESET": SubResource("Animation_jltwj"),
"climbing": SubResource("Animation_bmmu7"),
"death": SubResource("Animation_bl034"),
"jump": SubResource("Animation_fd5f4"),
"jump_end": SubResource("Animation_24x35"),
"ladder_end": SubResource("Animation_kcmuu"),
"running": SubResource("Animation_phuvu")
}

[sub_resource type="AnimationNodeBlendSpace1D" id="AnimationNodeBlendSpace1D_3s7lq"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_u8wuy"]
animation = &"death"

[sub_resource type="AnimationNodeBlendSpace1D" id="AnimationNodeBlendSpace1D_0e7vx"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_w83nf"]
animation = &"ladder_end"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_e3nub"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_d4gfb"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_6oep1"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_pivhf"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachine" id="AnimationNodeStateMachine_r70dy"]
states/End/position = Vector2(554, 100.25)
"states/Jump End/node" = SubResource("AnimationNodeBlendSpace1D_0e7vx")
"states/Jump End/position" = Vector2(370.901, 1.96011)
"states/Ladder End/node" = SubResource("AnimationNodeAnimation_w83nf")
"states/Ladder End/position" = Vector2(370.59, 197.48)
transitions = ["Start", "Ladder End", SubResource("AnimationNodeStateMachineTransition_e3nub"), "Ladder End", "End", SubResource("AnimationNodeStateMachineTransition_d4gfb"), "Start", "Jump End", SubResource("AnimationNodeStateMachineTransition_6oep1"), "Jump End", "End", SubResource("AnimationNodeStateMachineTransition_pivhf")]
graph_offset = Vector2(19.7123, -305.04)

[sub_resource type="AnimationNodeBlendSpace1D" id="AnimationNodeBlendSpace1D_lsf5j"]

[sub_resource type="AnimationNodeBlendSpace1D" id="AnimationNodeBlendSpace1D_dkqrm"]

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_5due8"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_vhu28"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_sjc5e"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_28yn8"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_sa7g2"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_21e3d"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_3vgoc"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_nnu24"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_fuk7v"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_dnuc8"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_44dou"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_wtg3n"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_jjpq2"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_y1hxu"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachine" id="AnimationNodeStateMachine_fb5go"]
states/Climb/node = SubResource("AnimationNodeBlendSpace1D_3s7lq")
states/Climb/position = Vector2(448.237, -46.4588)
states/Death/node = SubResource("AnimationNodeAnimation_u8wuy")
states/Death/position = Vector2(786.358, -45.1646)
states/End/position = Vector2(948.5, -46.5472)
states/Idle/node = SubResource("AnimationNodeStateMachine_r70dy")
states/Idle/position = Vector2(333.012, 101.296)
states/Jump/node = SubResource("AnimationNodeBlendSpace1D_lsf5j")
states/Jump/position = Vector2(601.911, 251.549)
states/Run/node = SubResource("AnimationNodeBlendSpace1D_dkqrm")
states/Run/position = Vector2(600.859, 98.9642)
states/Start/position = Vector2(200, 101.638)
transitions = ["Run", "Jump", SubResource("AnimationNodeStateMachineTransition_5due8"), "Idle", "Run", SubResource("AnimationNodeStateMachineTransition_vhu28"), "Idle", "Jump", SubResource("AnimationNodeStateMachineTransition_sjc5e"), "Jump", "Idle", SubResource("AnimationNodeStateMachineTransition_28yn8"), "Run", "Idle", SubResource("AnimationNodeStateMachineTransition_sa7g2"), "Run", "Climb", SubResource("AnimationNodeStateMachineTransition_21e3d"), "Climb", "Idle", SubResource("AnimationNodeStateMachineTransition_3vgoc"), "Idle", "Climb", SubResource("AnimationNodeStateMachineTransition_nnu24"), "Start", "Idle", SubResource("AnimationNodeStateMachineTransition_fuk7v"), "Climb", "Death", SubResource("AnimationNodeStateMachineTransition_dnuc8"), "Idle", "Death", SubResource("AnimationNodeStateMachineTransition_44dou"), "Run", "Death", SubResource("AnimationNodeStateMachineTransition_wtg3n"), "Jump", "Death", SubResource("AnimationNodeStateMachineTransition_jjpq2"), "Death", "End", SubResource("AnimationNodeStateMachineTransition_y1hxu")]
graph_offset = Vector2(67.2194, -281.22)

[sub_resource type="AnimationNodeBlendTree" id="AnimationNodeBlendTree_vnk0a"]
graph_offset = Vector2(-126.462, -188.5)
nodes/StateMachine/node = SubResource("AnimationNodeStateMachine_fb5go")
nodes/StateMachine/position = Vector2(100, 120)
node_connections = [&"output", 0, &"StateMachine"]

[node name="Player" type="CharacterBody2D"]
collision_mask = 2
script = SubResource("GDScript_sy84s")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CapsuleShape2D_xsfub")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("1_27e4p")
hframes = 18

[node name="LadderTopChecker" type="RayCast2D" parent="."]
position = Vector2(0, 21)
target_position = Vector2(0, 3)
collision_mask = 8

[node name="LadderBottomChecker" type="RayCast2D" parent="."]
position = Vector2(0, 21)
target_position = Vector2(0, 3)
collision_mask = 4

[node name="PlatformBelowChecker" type="RayCast2D" parent="."]
position = Vector2(0, 24)
target_position = Vector2(0, 3)
collision_mask = 2

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Sprite2D")
autoplay = "running"
libraries = {
"": SubResource("AnimationLibrary_met8n")
}

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource("AnimationNodeBlendTree_vnk0a")
anim_player = NodePath("../AnimationPlayer")
parameters/StateMachine/Climb/blend_position = 0
"parameters/StateMachine/Idle/Jump End/blend_position" = 0
parameters/StateMachine/Jump/blend_position = 0
parameters/StateMachine/Run/blend_position = 0

[node name="LandingTimer" type="Timer" parent="."]
wait_time = 0.15

[node name="StateMachine" type="Node" parent="." node_paths=PackedStringArray("actor", "anim_tree", "initial_state")]
script = ExtResource("2_h01ru")
actor = NodePath("..")
anim_tree = NodePath("../AnimationTree")
initial_state = NodePath("IdleState")

[node name="ClimbState" type="Node" parent="StateMachine"]
script = ExtResource("3_8qeu3")

[node name="IdleState" type="Node" parent="StateMachine"]
script = ExtResource("3_ygm7w")

[node name="JumpState" type="Node" parent="StateMachine"]
script = ExtResource("4_e73df")

[node name="RunState" type="Node" parent="StateMachine"]
script = ExtResource("4_hvfdt")

[connection signal="timeout" from="LandingTimer" to="." method="_on_landing_timer_timeout"]
